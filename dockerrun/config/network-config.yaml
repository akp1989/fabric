#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Fabric
version: "1.0"
mutual-tls: false

caliper:
  blockchain: fabric
  #command:
  #  start: export FABRIC_VERSION=1.4.4;export FABRIC_CA_VERSION=1.4.4;docker-compose -f docker-compose/fabric144/2org1peercouchdb_solo_raft.yaml up -d;sleep 20s
  #  end: docker-compose -f docker-compose/fabric144/2org1peercouchdb_solo_raft.yaml down;(test -z \"$(docker ps -aq)\") || docker rm $(docker ps -aq);(test -z \"$(docker images dev* -q)\") || docker rmi $(docker images dev* -q);rm -rf /tmp/hfc-*

info:
  Version: 1.4.4
  Size: 2 Orgs with 4 Peer
  Orderer: Raft
  Distribution: Single Host
  StateDB: CouchDB

clients:
  client0.org1.example.com:
    client:
      organization: Org1
      credentialStore:
        path: /tmp/hfc-kvs/org1
        cryptoStore:
          path: /tmp/hfc-cvs/org1
      clientPrivateKey:
        path: config/crypto-config/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/keystore/393f8d0a117bc05788e0fcf906907ad03674e2fac90b0848bf75e9665ed61d18_sk
      clientSignedCert:
        path: config/crypto-config/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/signcerts/User1@org1.example.com-cert.pem

  client0.org2.example.com:
    client:
      organization: Org2
      credentialStore:
        path: /tmp/hfc-kvs/org2
        cryptoStore:
          path: /tmp/hfc-cvs/org2
      clientPrivateKey:
        path: config/crypto-config/peerOrganizations/org2.example.com/users/User1@org2.example.com/msp/keystore/be4c382f8e4f3eaaec535ff7b54f79c8d7fc2aead107df4e42ed2c7c89319efa_sk
      clientSignedCert:
        path: config/crypto-config/peerOrganizations/org2.example.com/users/User1@org2.example.com/msp/signcerts/User1@org2.example.com-cert.pem


channels:
  testchannel:
    created: true
#    definition:
#        capabilities: []
#        consortium: 'SampleConsortium'
#        msps: ['Org1MSP', 'Org2MSP']
#        version: 0
    orderers:
    - orderer0.example.com
    - orderer1.example.com
    peers:
      peer0.org1.example.com:
        eventSource: true
      peer0.org2.example.com:
        eventSource: true
      peer1.org1.example.com:
        eventSource: true
      peer1.org2.example.com:
        eventSource: true

    chaincodes:
#    - id: marbles
#      version: "1.0.0"
#      language: node
#      path: config/chaincode/marbles
#      metadataPath: config/chaincode/marbles/metadata    
    - id: product-key
      version: "0.0.1"
      language: node
      path: config/chaincode/product-key
#      metadataPath: config/chaincode/marbles/metadata


organizations:
  Org1:
    mspid: Org1MSP
    peers:
    - peer0.org1.example.com
    - peer1.org1.example.com
    certificateAuthorities:
    - ca.org1.example.com
    adminPrivateKey:
      path: config/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore/ea3c6db4bd43698fb65ff0c5ba594ba362093c2f310b2247e6637034a8e23809_sk
    signedCert:
      path: config/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/signcerts/Admin@org1.example.com-cert.pem

  Org2:
    mspid: Org2MSP
    peers:
    - peer0.org2.example.com
    - peer1.org2.example.com
    certificateAuthorities:
    - ca.org2.example.com
    adminPrivateKey:
      path: config/crypto-config/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/keystore/b87a46249ec204f00a47c27f26af210c1cb1401f1732e53905f3b76507b46cc1_sk
    signedCert:
      path: config/crypto-config/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/signcerts/Admin@org2.example.com-cert.pem

orderers:
  orderer0.example.com:
    url: grpcs://localhost:7050
    grpcOptions:
      ssl-target-name-override: orderer0.example.com
    tlsCACerts:
            path: config/crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/msp/tlscacerts/tlsca.example.com-cert.pem

  orderer1.example.com:
    url: grpcs://localhost:9050
    grpcOptions:
      ssl-target-name-override: orderer1.example.com
    tlsCACerts:
            path: config/crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/msp/tlscacerts/tlsca.example.com-cert.pem

peers:
  peer0.org1.example.com:
    url: grpcs://localhost:7051
    grpcOptions:
      ssl-target-name-override: peer0.org1.example.com
      grpc.keepalive_time_ms: 600000
    tlsCACerts:
            path: config/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp/tlscacerts/tlsca.org1.example.com-cert.pem


  peer0.org2.example.com:
    url: grpcs://localhost:9051
    grpcOptions:
      ssl-target-name-override: peer0.org2.example.com
      grpc.keepalive_time_ms: 600000
    tlsCACerts:
            path: config/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp/tlscacerts/tlsca.org2.example.com-cert.pem

  peer1.org1.example.com:
    url: grpcs://localhost:7052
    grpcOptions:
      ssl-target-name-override: peer1.org1.example.com
      grpc.keepalive_time_ms: 600000
    tlsCACerts:
            path: config/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp/tlscacerts/tlsca.org1.example.com-cert.pem


  peer1.org2.example.com:
    url: grpcs://localhost:9052
    grpcOptions:
      ssl-target-name-override: peer1.org2.example.com
      grpc.keepalive_time_ms: 600000
    tlsCACerts:
            path: config/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp/tlscacerts/tlsca.org2.example.com-cert.pem


certificateAuthorities:
  ca.org1.example.com:
    url: https://localhost:7054
    httpOptions:
      verify: false
    tlsCACerts:
            path: config/crypto-config/peerOrganizations/org1.example.com/tlsca/tlsca.org1.example.com-cert.pem
    registrar:
    - enrollId: admin
      enrollSecret: adminpw

  ca.org2.example.com:
    url: https://localhost:9054
    httpOptions:
      verify: false
    tlsCACerts:
            path: config/crypto-config/peerOrganizations/org2.example.com/tlsca/tlsca.org2.example.com-cert.pem
    registrar:
    - enrollId: admin
      enrollSecret: adminpw
